{"version":3,"file":"component---src-pages-index-js-75f67130ff2914867a3d.js","mappings":"iKAiEA,IAtDY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,cAkBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,MAAAA,OAAA,EAAAA,EAAQa,OACP,uCACa,8BAASb,EAAOa,MAD7B,KAC6Cb,MAAAA,OAAA,EAAAA,EAAQc,UAAW,KADhE,KAGGX,MAAAA,OAAA,EAAAA,EAAQY,SACP,qBAAGC,KAAI,uBAAwBb,MAAAA,OAAxB,EAAwBA,EAAQY,SAAvC,+BAIDZ,MAAAA,OAAA,EAAAA,EAAQc,UACP,qBAAGD,KAAI,wBAAyBb,MAAAA,OAAzB,EAAyBA,EAAQc,UAAxC,yC,kFCqBZ,UArEkB,SAAC,GAAwB,IAAD,EAArBnB,EAAqB,EAArBA,KAAMoB,EAAe,EAAfA,SACnBC,GAAY,UAAArB,EAAKG,KAAKC,oBAAV,eAAwBkB,QAAxB,QACZC,EAAQvB,EAAKwB,kBAAkBC,MACrC,GAAsBzB,EAAK0B,gBAAkB,IAArCC,KAAAA,OAAR,MAAe,GAAf,EACMC,EAAaD,MAAAA,OAAH,EAAGA,EAAME,QAAQ,cAAe,IAEhD,OAAqB,IAAjBN,EAAMO,OAEN,gBAAC,IAAD,CAAQV,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQF,SAAUA,EAAUE,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,2BACES,wBAAyB,CAAEC,OAAQJ,GACnCK,SAAS,gBAEX,2BACA,8BACE,uDACA,sBAAIC,MAAO,CAAEC,UAAU,SACpBZ,EAAMa,KAAI,SAAAC,GACT,IAAMf,EAAQe,EAAKC,YAAYhB,OAASe,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACElC,UAAU,iBACVoC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMP,SAAS,OACnC,wBAAMA,SAAS,YAAYX,KAG/B,6BAAQe,EAAKC,YAAYQ,OAE3B,+BACE,qBACEf,wBAAyB,CACvBC,OAAQK,EAAKC,YAAYS,aAAeV,EAAKW,SAE/Cf,SAAS,wBASzB,8B","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          {social?.github && (\n            <a href={`https://github.com/${social?.github}`}>\n              You should check on Github\n            </a>\n          )}\n          {social?.twitter && (\n            <a href={`https://twitter.com/${social?.twitter}`}>\n              You should follow them on Twitter\n            </a>\n          )}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { html = '' } = data.markdownRemark || {}\n  const readmeHtml = html?.replace(/<h1.*<\\/h1>/, \"\")\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <section\n        dangerouslySetInnerHTML={{ __html: readmeHtml }}\n        itemProp=\"articleBody\"\n      />\n      <hr />\n      <footer>\n        <h2>Find more recent articles</h2>\n        <ol style={{ listStyle: `none` }}>\n          {posts.map(post => {\n            const title = post.frontmatter.title || post.fields.slug\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h3>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h3>\n                    <small>{post.frontmatter.date}</small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            )\n          })}\n        </ol>\n      </footer>\n      <hr />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { slug: { glob: \"/docs/**\" } } }\n      limit: 4\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n    markdownRemark(fileAbsolutePath: { glob: \"**/README.md\" }) {\n      id\n      fileAbsolutePath\n      html\n    }\n  }\n`\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","summary","github","href","twitter","location","siteTitle","title","posts","allMarkdownRemark","nodes","markdownRemark","html","readmeHtml","replace","length","dangerouslySetInnerHTML","__html","itemProp","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","date","description","excerpt"],"sourceRoot":""}